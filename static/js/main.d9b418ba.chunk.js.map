{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","clickHandler","good","includes","setState","filter","g","concat","this","className","length","slice","join","type","onClick","map","classNames","selected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8PAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,aAAe,SAACC,EAAcF,GACxBA,EAAcG,SAASD,GACzB,EAAKE,UAAS,SAACL,GAAD,MAA0B,CACtCC,cAAeD,EAAMC,cAAcK,QAAO,SAAAC,GAAC,OAAIA,IAAMJ,SAGvD,EAAKE,UAAS,SAACL,GAAD,MAA0B,CACtCC,cAAeD,EAAMC,cAAcO,OAAOL,Q,4CAKhD,WAAU,IAAD,OACCF,EAAkBQ,KAAKT,MAAvBC,cAER,OACE,sBAAKS,UAAU,cAAf,UACE,qBAAIA,UAAU,aAAd,WACIT,EAAcU,QAAU,oBACA,IAAzBV,EAAcU,QAAd,UAAiCV,EAAjC,gBACAA,EAAcU,OAAS,GAAvB,UAA+BV,EAAcW,MAAM,GAAI,GAAGC,KAAK,MAA/D,gBAA4EZ,EAAcW,OAAO,GAAjG,iBAEAX,EAAcU,OAAS,GACtB,wBACEG,KAAK,SACLJ,UAAU,iCACVK,QAAS,WACP,EAAKV,SAAS,CAAEJ,cAAe,MAJnC,2BAWJ,6BACGH,EAAgBkB,KAAI,SAACb,GAAD,OACnB,qBAEEO,UAAWO,IACT,2BACA,CAAEC,SAAUjB,EAAcG,SAASD,KAJvC,UAOGA,EACA,IACAF,EAAcG,SAASD,IACrB,wBACCW,KAAK,SACLJ,UAAU,yCACVK,QAAS,WACP,EAAKb,aAAaC,EAAMF,IAJ3B,qBAUDA,EAAcG,SAASD,IACtB,wBACCW,KAAK,SACLJ,UAAU,+CACVK,QAAS,WACP,EAAKb,aAAaC,EAAMF,IAJ3B,sBApBEE,e,GA1CDgB,IAAMC,WAgFTrB,IClGfsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d9b418ba.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  clickHandler = (good: string, selectedGoods: string[]): void => {\n    if (selectedGoods.includes(good)) {\n      this.setState((state: State): State => ({\n        selectedGoods: state.selectedGoods.filter(g => g !== good),\n      }));\n    } else {\n      this.setState((state: State): State => ({\n        selectedGoods: state.selectedGoods.concat(good),\n      }));\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App section\">\n        <h1 className=\"title is-2\">\n          {!selectedGoods.length && 'No goods selected'}\n          {selectedGoods.length === 1 && `${selectedGoods} is selected`}\n          {selectedGoods.length > 1 && `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods.slice(-1)} are selected`}\n\n          {selectedGoods.length > 0 && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light ml-5\"\n              onClick={() => {\n                this.setState({ selectedGoods: [] });\n              }}\n            >\n              Clear List\n            </button>\n          )}\n        </h1>\n        <ul>\n          {goodsFromServer.map((good) => (\n            <li\n              key={good}\n              className={classNames(\n                'mb-3 pl-3 pb-1 is-size-4',\n                { selected: selectedGoods.includes(good) }\n              )}\n            >\n              {good}\n              {' '}\n              {selectedGoods.includes(good) &&\n                (<button\n                  type=\"button\"\n                  className=\"button is-warning ml-5 is-pulled-right\"\n                  onClick={() => {\n                    this.clickHandler(good, selectedGoods);\n                  }}\n                >\n                  Remove\n                </button>\n                )}\n              {!selectedGoods.includes(good) && \n                (<button\n                  type=\"button\"\n                  className=\"button is-info is-light ml-5 is-pulled-right\"\n                  onClick={() => {\n                    this.clickHandler(good, selectedGoods);\n                  }}\n                >\n                  Select\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}